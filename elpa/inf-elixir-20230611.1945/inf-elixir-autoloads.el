;;; inf-elixir-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from inf-elixir.el

(autoload 'inf-elixir-minor-mode "inf-elixir" "\
Minor mode for Elixir buffers that allows interacting with the REPL.

This is a minor mode.  If called interactively, toggle the
`Inf-Elixir minor mode' mode.  If the prefix argument is
positive, enable the mode, and if it is zero or negative, disable
the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `inf-elixir-minor-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(autoload 'inf-elixir-mode "inf-elixir" "\
Major mode for interacting with an Elixir REPL.

(fn)" t)
(autoload 'inf-elixir-run-cmd "inf-elixir" "\
Create a new IEx buffer and run CMD in project DIR.

DIR should be an absolute path to the root level of a Mix project (where the
mix.exs file is).  A value of nil for DIR indicates that the REPL should not
belong to any project.

(fn DIR CMD)")
(autoload 'inf-elixir "inf-elixir" "\
Create an Elixir REPL, using CMD if given.

When called from ELisp, an argument (CMD) can be passed which will be the
command run to start the REPL.  The default is provided by
`inf-elixir-base-command'.

When called interactively with a prefix argument, the user will
be prompted for the REPL command.  The default is provided by
`inf-elixir-base-command'.

(fn &optional CMD)" t)
(autoload 'inf-elixir-project "inf-elixir" "\
Create a REPL in the context of the current project, using CMD if given.

If an existing REPL already exists for the current project, the user will be
asked whether they want to keep the running REPL or replace it.

When called from ELisp, an argument (CMD) can be passed which will be the
command run to start the REPL.  The default is provided by
`inf-elixir-project-command'.

When called interactively with a prefix argument, the user will
be prompted for the REPL command.  The default is provided by
`inf-elixir-project-command'.

(fn &optional CMD)" t)
(register-definition-prefixes "inf-elixir" '("inf-elixir-"))

;;; End of scraped data

(provide 'inf-elixir-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; inf-elixir-autoloads.el ends here
